openapi: 3.0.1
info:
  title: USER-CREDENTIALS-INTEGRATION
  description: Example Feign document for User Credentials Integration
  contact:
    name: WebFlux Sample
    email: webflux.sample@email.com
  version: 1.0.0
servers:
  - url: https://api-dev.webflux.sample/webflux-sample/v1
    description: DEVELOPMENT
  - url: https://api-qa.webflux.sample/webflux-sample/v1
    description: QA
  - url: https://api-homolog.webflux.sample/webflux-sample/v1
    description: HOMOLOG
  - url: https://api.webflux.sample/webflux-sample/v1
    description: PRODUCTION

tags:
  - name: User Credentials

security:
  - OauthSecurityUser:
      - write
  - OauthSecurityClient:
      - write

paths:
  # Create User Credentials
  /user:
    post:
      tags:
        - User Credentials
      summary: Create Credentials for user
      description: |
        ## Responsibilities
        * Creates an credential for user.
        
        ---
        ## Usage
        * Response 201 will have a JWT with an user access token and a refresh token (if user selected remember-me option). 
        Note that, if user selected remember-me option, the user access token has a 10 minutes expires time. If not, user access token has 60 minutes expire.
        
        ---
        ## Requirements
        * To access this endpoint, the client (application) must have the following sets of roles:
            * `CLI-AUTH-IDENTIFIED`

      operationId: createCredential
      requestBody:
        description: User Credentials info.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentialCreateRequest'
        required: true
      responses:
        "201":
          description: Credential Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentialCreateResponse'
        "400":
          description: |
            Bad Request
            This endpoint can throw the following errors:
            * `[{"code": "1", "message": "Invalid e-mail."}]`
            * `[{"code": "2", "message": "Invalid phone."}]`
            * `[{"code": "2", "message": "Invalid address."}]`
            * `[{"code": "4", "message": "Invalid userId"}]`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "401":
          description: |
            Unauthorized
            This endpoint can throw the following errors:
            * `[{"code": "5", "message": "Unauthorized."}]`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
      security:
        - OauthSecurityUser:
            - write
        - OauthSecurityClient:
            - write
  # Get, Delete or Update User Credentials
  /user/{id}:
    get:
      tags:
        - User Credentials
      summary: Get Credential from user
      description: |
        ## Responsibilities
        * Get Credentials for an user.
        
        ---
        ## Requirements
        * To access this endpoint, the client (application) must have the following sets of roles:
            * `CLI-AUTH-IDENTIFIED`

      operationId: getCredential
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentialGetRequest'
        "401":
          description: |
            Unauthorized
            This endpoint can throw the following errors:
            * `[{"code": "5", "message": "Unauthorized."}]`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "404":
          description: |
            Not Found
            This endpoint can throw the following errors:
            * `[{"code": "10", "message": "Invalid userId"}]`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "405":
          description: |
            Method Not Allowed
            This endpoint can throw the following errors:
            * `[{"code": "405", "message": "Request method 'POST' is not supported."}]`
            * `[{"code": "405", "message": "Request method 'PUT' is not supported."}]`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
      security:
        - OauthSecurityUser:
            - write
        - OauthSecurityClient:
            - write
    delete:
      tags:
        - User Credentials
      summary: Remove Credential from user
      description: |
        ## Responsibilities
         * Removes an credential for a deleted user.
        
         ---
         ## Requirements
        * To access this endpoint, the client (application) must have the following sets of roles:
            * `CLI-AUTH-IDENTIFIED`

      operationId: removeCredential
      parameters:
        - name: id
          in: path
          description: User ID to remove
          schema:
            type: string
          required: true
      responses:
        "204":
          description: Credential Removed
        "401":
          description: |
            Unauthorized
            This endpoint can throw the following errors:
            * `[{"code": "5", "message": "Unauthorized."}]`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "403":
          description: |
            Forbidden
            This endpoint can throw the following errors:
            * `[{"code": "11", "message": "You do not have enough privileges."}]`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "405":
          description: |
            Method Not Allowed
            This endpoint can throw the following errors:
            * `[{"code": "405", "message": "Request method 'POST' is not supported."}]`
            * `[{"code": "405", "message": "Request method 'PUT' is not supported."}]`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
      security:
        - OauthSecurityUser:
            - write
        - OauthSecurityClient:
            - write
    put:
      tags:
        - User Credentials
      summary: Updates specific credential attributes
      description: |
        ## Responsibilities
        * This endpoint has the function of updates specific attributes for an credential of user.
        
        ---
        ## Requirements
        * To access this endpoint, the client (application) must have the following sets of roles:
            * `CLI-AUTH-IDENTIFIED`

      operationId: putCredential
      parameters:
        - name: id
          in: path
          description: User ID to update
          required: true
          schema:
            type: string
      requestBody:
        description: User Account details to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentialUpdateRequest'
        required: true
      responses:
        "200":
          description: Credential Patched
          content: {}
        "400":
          description: |
            Bad Request
            This endpoint can throw the following errors:
            * `[{"code": "12", "message": "Invalid e-mail."}]`
            * `[{"code": "13", "message": "Invalid mobile."}]`
            * `[{"code": "14", "message": "Invalid address."}]`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "401":
          description: |
            Unauthorized
            This endpoint can throw the following errors:
            * `[{"code": "5", "message": "Unauthorized."}]`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
      security:
        - OauthSecurityUser:
            - write
        - OauthSecurityClient:
            - write
    patch:
      tags:
        - User Credentials
      summary: Patch specific credential attributes for user
      description: |
        ## Responsibilities
        * This endpoint has the function of patch specific attributes for an user credential.
        
        ---
        ## Requirements
        * To access this endpoint, the client (application) must have the following sets of roles:
            * `CLI-AUTH-IDENTIFIED`
      operationId: patchCredential
      parameters:
        - name: id
          in: path
          description: User ID to patch
          required: true
          schema:
            type: string
      requestBody:
        description: User Account Credentials to patch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentialUpdateRequest'
        required: true
      responses:
        "200":
          description: Credential Patched
          content: {}
        "400":
          description: |
            Bad Request
            This endpoint can throw the following errors:
            * `[{"code": "12", "message": "Invalid e-mail."}]`
            * `[{"code": "13", "message": "Invalid mobile."}]`
            * `[{"code": "14", "message": "Invalid address."}]`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "401":
          description: |
            Unauthorized
            This endpoint can throw the following errors:
            * `[{"code": "5", "message": "Unauthorized."}]`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
      security:
        - OauthSecurityUser:
            - write
        - OauthSecurityClient:
            - write

components:
  schemas:

    UserMobile:
      type: object
      required:
        - regionCode
        - phoneNumber
      properties:
        regionCode:
          type: integer
          format: int32
          example: 55
        areaCode:
          type: integer
          format: int32
          example: 11
          description: Required for Brazil region code (code = 55)
        phoneNumber:
          type: integer
          format: int64
          example: 911112222

    UserCredentialCreateResponse:
      required:
        - userIdentityId
      type: object
      properties:
        userIdentityId:
          type: string
        accessToken:
          type: string
        tokenType:
          type: string
        refreshToken:
          type: string
        expiresIn:
          type: string
        scope:
          type: array
          items:
            type: string
            description: Requisition scope like ['READ','WRITE', 'EXECUTE' or 'ALL']

    UserCredentialCreateRequest:
      required:
        - userId
      type: object
      properties:
        userId:
          type: string
        userEmail:
          type: string
        userName:
          type: string
        businessId:
          type: string
        lead:
          type: boolean
          default: false
        userMobile:
          $ref: '#/components/schemas/UserMobile'
        token:
          type: string
      description: One of userEmail or userMobile are required

    UserCredentialGetRequest:
      required:
        - userId
      type: object
      properties:
        userId:
          type: string
        userEmail:
          type: string
        userName:
          type: string
        businessId:
          type: string
        lead:
          type: boolean
        userMobile:
          $ref: '#/components/schemas/UserMobile'
      description: User Credential details

    UserCredentialUpdateRequest:
      description: One of userEmail or userMobile are required
      type: object
      properties:
        userEmail:
          type: string
        userMobile:
          $ref: '#/components/schemas/UserMobile'
        defaultBusinessId:
          type: string

    ErrorList:
      type: array
      items:
        $ref: '#/components/schemas/ErrorModel'

    ErrorModel:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: Code error.
          example: "01"
        message:
          type: string
          description: Return message reference code error.
          example: message reference code error

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
    Default:
      description: Default Error. This response is used for all HTTP codes that are
        not covered individually for this operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
    NotImplemented:
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
    PaymentRequired:
      description: Payment Required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
    ServiceUnavailable:
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
    Unauthorized:
      description: Authorization Failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'
    UnprocessableEntity:
      description: Unprocessable entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorList'

  securitySchemes:
    OauthSecurityUser:
      type: oauth2
      flows:
        password:
          tokenUrl: http://localhost:8089/api/v1/security/user/login
          scopes:
            read: User read scope
            write: User write scope
    OauthSecurityClient:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: http://localhost:8089/api/v1/security/client/login
          scopes:
            read: Client read scope
            write: Client write scope