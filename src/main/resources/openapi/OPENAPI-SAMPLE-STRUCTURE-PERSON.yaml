openapi: 3.0.2
info:
  title: OPENAPI-SAMPLE-STRUCTURE-PERSON
  description: Example OpenAPI document for Person
  contact:
    name: WebFlux Sample
    email: webflux.sample@email.com
  version: 1.0.0
servers:
  - url: https://api-dev.webflux.sample/webflux-sample/v1
    description: DEVELOPMENT
  - url: https://api-qa.webflux.sample/webflux-sample/v1
    description: QA
  - url: https://api-homolog.webflux.sample/webflux-sample/v1
    description: HOMOLOG
  - url: https://api.webflux.sample/webflux-sample/v1
    description: PRODUCTION

tags:
  - name: Person

paths:
  /person:
    post:
      tags:
        - Person
      summary: Create one person
      security:
        - BearerAuth: []
        - OauthSecurityUser:
            - write
            - read
      description: |
        
        ## Responsibilities
        Create person

        ---
        ## Requirements
        To access this endpoint, you must have one of the following sets of roles:
        - `AUTH-BASIC` level

      operationId: createPerson
      requestBody:
        description: Person to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequestBody'
        required: true
      responses:
        201:
          $ref: '#/components/responses/PersonCreatedResponse'
      x-codegen-request-body-name: createPersonRequestBody
    get:
      tags:
        - Person
      summary: Read all persons
      security:
        - BearerAuth: []
        - OauthSecurityUser:
            - write
            - read
      description: |
        
        ## Responsibilities
        Retrieves a list of Persons

        ---
        ## Requirements
        To access this endpoint, you must have one of the following sets of roles:
           * `AUTH-BASIC` level

      operationId: readAllPersons
#      parameters:
#        - $ref: '#/components/parameters/QueryLimit'
#        - $ref: '#/components/parameters/QueryOffset'
#        - $ref: '#/components/parameters/QuerySort'
      responses:
        200:
          $ref: '#/components/responses/PersonsReadResponse'
      x-codegen-request-body-name: readPersonsRequestBody
  /person/{personId}:
    get:
      tags:
        - Person
      summary: Read one person
      security:
        - BearerAuth: []
        - OauthSecurityUser:
            - write
            - read
      description: |
        
        ## Responsibilities
        Retrieves a list of Persons

        ---
        ## Requirements
        To access this endpoint, you must have one of the following sets of roles:
           * `AUTH-BASIC` level

      operationId: readOnePerson
      parameters:
        - in: path
          name: personId
          required: true
          example: "67fe6bac382b9445e80b404e"
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/PersonReadResponse'
      x-codegen-request-body-name: readPersonRequestBody
    put:
      tags:
        - Person
      summary: Update one person
      security:
        - BearerAuth: []
        - OauthSecurityUser:
            - write
            - read
      description: |
        
        ## Responsibilities
        Update one specific person

        ---
        ## Requirements
        To access this endpoint, you must have one of the following sets of roles:
           * `AUTH-BASIC` level

      operationId: updatePerson
      parameters:
        - in: path
          name: personId
          required: true
          example: "67fe6bac382b9445e80b404e"
          schema:
            type: string
      requestBody:
        description: Person Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequestBody'
      responses:
        202:
          $ref: '#/components/responses/PersonReadResponse'
      x-codegen-request-body-name: updatePersonRequestBody
    delete:
      tags:
        - Person
      summary: Delete one person
      security:
        - BearerAuth: []
        - OauthSecurityUser:
            - write
            - read
      description: |
        
        ## Responsibilities
        Delete one specific person

        ---
        ## Requirements
        To access this endpoint, you must have one of the following sets of roles:
           * `AUTH-BASIC` level

      operationId: deletePerson
      parameters:
        - in: path
          name: personId
          required: true
          example: "67fe6bac382b9445e80b404e"
          schema:
            type: string
      responses:
        204:
          $ref: '#/components/responses/GenericsResponse'
      x-codegen-request-body-name: deletePersonRequestBody
    patch:
      tags:
        - Person
      summary: Patch one person
      security:
        - BearerAuth: []
        - OauthSecurityUser:
            - write
            - read
      description: |
        
        ## Responsibilities
        Patch one specific detail in one specific person

        ---
        ## Requirements
        To access this endpoint, you must have one of the following sets of roles:
           * `AUTH-BASIC` level

      operationId: patchPerson
      parameters:
        - in: path
          name: personId
          required: true
          example: "67fe6bac382b9445e80b404e"
          schema:
            type: string
      requestBody:
        description: Person Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonPatchRequestBody'
      responses:
        202:
          $ref: '#/components/responses/GenericsResponse'
      x-codegen-request-body-name: patchPersonRequestBody
  /person/{personId}/{fieldName}/{fieldValue}:
    patch:
      tags:
        - Person
      summary: Patch one person using path parameters
      security:
        - BearerAuth: []
        - OauthSecurityUser:
            - write
            - read
      description: |
        
        ## Responsibilities
        Patch one specific detail in one specific person using only path parameters

        ---
        ## Requirements
        To access this endpoint, you must have one of the following sets of roles:
           * `AUTH-BASIC` level

      operationId: patchPersonByPath
      parameters:
        - in: path
          name: personId
          required: true
          example: "67fe6bac382b9445e80b404e"
          schema:
            type: string
        - in: path
          name: fieldName
          required: true
          example: "name"
          schema:
            type: string
        - in: path
          name: fieldValue
          required: true
          example: "my%20name%20is%20John%20Smith%20Viz"
          schema:
            type: object
      responses:
        202:
          $ref: '#/components/responses/GenericsResponse'
      x-codegen-request-body-name: patchPersonByPathRequestBody

components:
  securitySchemes:
    OauthSecurityUser:
      type: oauth2
      flows:
        password:
          tokenUrl: https://api-dev.webflux.sample/security/v1/oauth2/login
          scopes:
            read: User read scope
            write: User write scope
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
#  parameters:
#    QueryLimit:
#      name: limit
#      in: query
#      schema:
#        type: integer
#        default: 20
#      description: Total count of registries to fetch.
#    QueryOffset:
#      name: offset
#      in: query
#      schema:
#        type: integer
#        default: 0
#      description: From which index to seek for registries.
#    QuerySort:
#      name: sort
#      in: query
#      schema:
#        type: string
#        example: name
#        default: id
#      description: Named field to sort results by
  schemas:
    ## Create, Update
    PersonRequestBody:
      required:
        - name
        - email
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
          example: John Smith Viz
        email:
          type: string
          minLength: 1
          maxLength: 200
          example: john-smith@email.com
    ## Patch
    PersonPatchRequestBody:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
          example: John Smith Viz
        email:
          type: string
          minLength: 1
          maxLength: 200
          example: john-smith@email.com
    ## Create Response
    PersonCreatedResponseBody:
      type: object
      properties:
        id:
          type: string
          example: 620eb80e0f9f7c26ba190dfc
    ## Read Response
    PersonReadResponseBody:
      type: object
      properties:
        id:
          type: string
          example: 620eb80e0f9f7c26ba190dfc
        name:
          type: string
          example: John Smith Viz
        email:
          type: string
          example: john@email.com
        active:
          type: boolean
          example: true
        createdAt:
          type: string
          example: "2025-04-20T21:18:23.524+00:00"
        updatedAt:
          type: string
          example: "2025-04-20T21:18:23.524+00:00"
          x-field-extra-annotation: "@JsonInclude(JsonInclude.Include.NON_NULL)"
        deletedAt:
          type: string
          example: "2025-04-20T21:18:23.524+00:00"
          x-field-extra-annotation: "@JsonInclude(JsonInclude.Include.NON_NULL)"
        address:
          x-field-extra-annotation: "@JsonInclude(JsonInclude.Include.NON_NULL)"
          type: array
          items:
            $ref: '#/components/schemas/AddressResponseBody'
        phones:
          x-field-extra-annotation: "@JsonInclude(JsonInclude.Include.NON_NULL)"
          type: array
          items:
            $ref: '#/components/schemas/PhoneResponseBody'
    ## Read Only One Response
    PersonOnlyReadResponseBody:
      type: object
      properties:
        id:
          type: string
          example: 620eb80e0f9f7c26ba190dfc
        name:
          type: string
          example: John Smith Viz
        email:
          type: string
          example: john@email.com
        active:
          type: boolean
          example: true
        createdAt:
          type: string
          example: "2025-04-20T21:18:23.524+00:00"
        updatedAt:
          type: string
          example: "2025-04-20T21:18:23.524+00:00"
          x-field-extra-annotation: "@JsonInclude(JsonInclude.Include.NON_NULL)"
        deletedAt:
          type: string
          example: "2025-04-20T21:18:23.524+00:00"
          x-field-extra-annotation: "@JsonInclude(JsonInclude.Include.NON_NULL)"
    PersonsReadResponseBody:
      type: object
      properties:
        persons:
          description: List of Persons
          type: array
          items:
            $ref: '#/components/schemas/PersonOnlyReadResponseBody'
    AddressResponseBody:
      type: object
      description: List of Address
      properties:
        street:
          type: string
          minLength: 1
          maxLength: 200
          example: "Street name test"
        number:
          type: integer
          example: 1234
        zipcode:
          type: string
          minLength: 1
          maxLength: 15
          example: "12090000"
        city:
          type: string
          minLength: 1
          example: "New York"
        active:
          type: boolean
          example: true
        createdAt:
          type: string
          example: "2025-04-20T21:18:23.524+00:00"
        updatedAt:
          type: string
          example: "2025-04-20T21:18:23.524+00:00"
          x-field-extra-annotation: "@JsonInclude(JsonInclude.Include.NON_NULL)"
        deletedAt:
          type: string
          example: "2025-04-20T21:18:23.524+00:00"
          x-field-extra-annotation: "@JsonInclude(JsonInclude.Include.NON_NULL)"
    PhoneResponseBody:
      type: object
      description: List of Phones
      properties:
        phoneNumber:
          type: string
          minLength: 1
          maxLength: 15
          example: "+55121234567890"
        phoneType:
          type: string
          minLength: 1
          example: "mobile"
        active:
          type: boolean
          example: true
        createdAt:
          type: string
          example: "2025-04-20T21:18:23.524+00:00"
        updatedAt:
          type: string
          example: "2025-04-20T21:18:23.524+00:00"
          x-field-extra-annotation: "@JsonInclude(JsonInclude.Include.NON_NULL)"
        deletedAt:
          type: string
          example: "2025-04-20T21:18:23.524+00:00"
          x-field-extra-annotation: "@JsonInclude(JsonInclude.Include.NON_NULL)"
    ## Generics Response
    GenericsResponseBody:
      type: object
      properties:
        message:
          type: string
          example: "Operation executed successfully"
  responses:
    PersonCreatedResponse:
      description: Person Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PersonCreatedResponseBody'
    PersonReadResponse:
      description: Person Read
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PersonReadResponseBody'
    PersonsReadResponse:
      description: Person Read
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PersonsReadResponseBody'
    GenericsResponse:
      description: Generics Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericsResponseBody'
